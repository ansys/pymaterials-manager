[{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_to_material/index.html#the-matml_to_materialpy-module","title":"The matml_to_material.py module","text":"The matml_to_material.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_to_material/index.html#summary","title":"The matml_to_material.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nconvert_matml_materials\n\nConvert a list of materials into Material objects.\n\nConstants\n\n\n\n\n\nMODEL_NAMESPACE\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_to_material/index.html#description","title":"The matml_to_material.py module > Description","text":"Description\n\nProvides a function to convert MatML entries into Material objects."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_to_material/index.html#module-detail","title":"The matml_to_material.py module > Module detail","text":"Module detail\n\n\n\nmatml_to_material.convert_matml_materials(materials_dict: Dict, transfer_ids: Dict, index_offset: int) -> Sequence[ansys.materials.manager._models.material.Material]\n\nConvert a list of materials into Material objects.\n\nParameters\n\nmaterials_dict:\n\ndict of raw material data from a matml import\n\ntransfer_ids:\n\ndict of material names and unique transfer ids\n\nindex_offset:\n\nint to offset the material id (number) to avoid conflicts with already existing materials\n\nReturns a list of Material objects\n\n\n\n\n\nmatml_to_material.MODEL_NAMESPACE = 'ansys.materials.manager._models._material_models.'\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/index.html#the-matml_parserpy-module","title":"The matml_parser.py module","text":"The matml_parser.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/index.html#summary","title":"The matml_parser.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nParameter\n\nDefine a parameter such as density or Young’s Modulus.\n\nPropertySet\n\nDefine a PropertySet which contains one or several parameters.\n\nMatmlReader\n\nParse a MatML (engineering data xml) file.\n\nConstants\n\n\n\n\n\nMATERIALS_ELEMENT_KEY\n\n\n\nMATML_DOC_KEY\n\n\n\nMETADATA_KEY\n\n\n\nBULKDATA_KEY\n\n\n\nUNITLESS_KEY\n\n\n\nBEHAVIOR_KEY\n\n\n\nWBTRANSFER_KEY\n\n\n\nMAT_TRANSFER_ID\n\n\n\nQUALIFIER_KEY\n\n\n\nPROPERTY_DATA_KEY\n\n\n\nPARAMETER_VALUE_KEY\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/index.html#description","title":"The matml_parser.py module > Description","text":"Description\n\nProvides the matml_parser module."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/index.html#module-detail","title":"The matml_parser.py module > Module detail","text":"Module detail\n\n\n\nmatml_parser.MATERIALS_ELEMENT_KEY = 'Materials'\n\n\n\n\n\nmatml_parser.MATML_DOC_KEY = 'MatML_Doc'\n\n\n\n\n\nmatml_parser.METADATA_KEY = 'Metadata'\n\n\n\n\n\nmatml_parser.BULKDATA_KEY = 'BulkDetails'\n\n\n\n\n\nmatml_parser.UNITLESS_KEY = 'Unitless'\n\n\n\n\n\nmatml_parser.BEHAVIOR_KEY = 'Behavior'\n\n\n\n\n\nmatml_parser.WBTRANSFER_KEY = 'ANSYSWBTransferData'\n\n\n\n\n\nmatml_parser.MAT_TRANSFER_ID = 'DataTransferID'\n\n\n\n\n\nmatml_parser.QUALIFIER_KEY = 'Qualifier'\n\n\n\n\n\nmatml_parser.PROPERTY_DATA_KEY = 'PropertyData'\n\n\n\n\n\nmatml_parser.PARAMETER_VALUE_KEY = 'ParameterValue'\n\n"},{"objectID":"Contribute","href":"contributing.html#contribute","title":"Contribute","text":"Contribute\n\nOverall guidance on contributing to a PyAnsys library appears in the\nContribute topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyMaterials Manager.\n\nThe following contribution information is specific to PyMaterials Manager."},{"objectID":"Contribute","href":"contributing.html#clone-the-repository-and-install-the-package","title":"Contribute > Clone the repository and install the package","text":"Clone the repository and install the package\n\nTo clone the PyMaterials Manager repository and install the latest release\nin development mode, run this code:"},{"objectID":"Contribute","href":"contributing.html#post-issues","title":"Contribute > Post issues","text":"Post issues\n\nUse the PyMaterials Manager Issues page to submit questions, report bugs,\nand request new features. When possible, use these issue templates:\n\nBug report template\n\nFeature request template\n\nIf your issue does not fit into one of these categories, create your own issue.\n\nTo reach the project support team, email pyansys.core@ansys.com."},{"objectID":"Contribute","href":"contributing.html#view-documentation","title":"Contribute > View documentation","text":"View documentation\n\nDocumentation for the latest stable release of PyMaterials Manager is hosted at\nPyMaterials Manager Documentation."},{"objectID":"Contribute","href":"contributing.html#adhere-to-code-style","title":"Contribute > Adhere to code style","text":"Adhere to code style\n\nPyMaterials Manager follows the PEP8 standard as outlined in the PyAnsys Development Guide and implements style checking using\npre-commit.\n\nTo ensure your code meets minimum code styling standards, run this code:\n\nYou can also install this as a pre-commit hook by running this code:\n\nThis way, it’s not possible for you to push code that fails the style checks:\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/common/index.html#the-commonpy-module","title":"The common.py module","text":"The common.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/common/index.html#summary","title":"The common.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nconvert_to_float_or_keep\n\nAttempt to convert a string to float.\n\nfill_upper_triangular_matrix\n\nConvert a vector of coefficients into a full matrix.\n\nAttributes\n\n\n\n\n\nmodel_type\n\n\n\nConstants\n\n\n\n\n\nMP_MATERIAL_HEADER_REGEX\n\n\n\nTB_MATERIAL_HEADER_REGEX\n\n\n\nFLOAT_VALUE_REGEX\n\n\n\nINTEGER_VALUE_REGEX\n\n\n\nMATRIX_LABEL_REGEX\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/common/index.html#description","title":"The common.py module > Description","text":"Description\n\nProvides the common module."},{"objectID":"Home","href":"api/ansys/materials/manager/util/common/index.html#module-detail","title":"The common.py module > Module detail","text":"Module detail\n\n\n\ncommon.convert_to_float_or_keep(val: float | str | None) -> float | str | None\n\nAttempt to convert a string to float.\n\nParameters\n\nval\n\npython:str | python:None\n\nThe value to convert.\n\nReturns\n\n\n\n——-\n\n\n\nfloat | str | None\n\nfloat if conversion succeeds\n\noriginal string if conversion fails\n\nNone if input is None\n\n\n\ncommon.fill_upper_triangular_matrix(vector: List[float]) -> numpy.ndarray\n\nConvert a vector of coefficients into a full matrix.\n\nGenerates a symmetric, square matrix.\n\nParameters\n\nvector\n\nList[python:float]\n\nCoefficients of the lower half-matrix. E.g. D11, D12, D22, etc.\n\nReturns\n\nnp.ndarray\n\nSquare symmetric matrix.\n\nRaises\n\nValueError\n\nIf the length of the input vector is not a triangular number.\n\n\n\ncommon.MP_MATERIAL_HEADER_REGEX\n\n\n\n\n\ncommon.TB_MATERIAL_HEADER_REGEX\n\n\n\n\n\ncommon.FLOAT_VALUE_REGEX\n\n\n\n\n\ncommon.INTEGER_VALUE_REGEX\n\n\n\n\n\ncommon.MATRIX_LABEL_REGEX\n\n\n\n\n\ncommon.model_type\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_snippets_strings/index.html#the-mapdl_snippets_stringspy-module","title":"The mapdl_snippets_strings.py module","text":"The mapdl_snippets_strings.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_snippets_strings/index.html#summary","title":"The mapdl_snippets_strings.py module > Summary","text":"Summary\n\nConstants\n\n\n\n\n\nPREDIFINED_TB_FIELDS\n\n\n\nPREDIFINED_TB_FIELDS\n\n\n\nINTERPOLATION_ALGORITHM_MAP\n\n\n\nEXTRAPOLATION_TYPE_MAP\n\n\n\nUSER_DEFINED_TB_FIELDS\n\n\n\nCONSTANT_MP_PROPERTY\n\n\n\nTEMPERATURE_REFERENCE\n\n\n\nMP_DATA\n\n\n\nMP_TEMP\n\n\n\nTB\n\n\n\nTB_FIELD\n\n\n\nTB_DATA\n\n\n\nTB_TEMP\n\n\n\nTBPT\n\n\n\nTBIN_SCALE\n\n\n\nTBIN_ALGO\n\n\n\nTBIN_DEFA\n\n\n\nTBIN_BNDS\n\n\n\nTBIN_NORM\n\n\n\nTBIN_CACH\n\n\n\nTBIN_EXTR\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_snippets_strings/index.html#module-detail","title":"The mapdl_snippets_strings.py module > Module detail","text":"Module detail\n\n\n\nmapdl_snippets_strings.PREDIFINED_TB_FIELDS\n\n\n\n\n\nmapdl_snippets_strings.PREDIFINED_TB_FIELDS\n\n\n\n\n\nmapdl_snippets_strings.INTERPOLATION_ALGORITHM_MAP\n\n\n\n\n\nmapdl_snippets_strings.EXTRAPOLATION_TYPE_MAP\n\n\n\n\n\nmapdl_snippets_strings.USER_DEFINED_TB_FIELDS = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.CONSTANT_MP_PROPERTY = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TEMPERATURE_REFERENCE = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.MP_DATA = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.MP_TEMP = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TB = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TB_FIELD = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TB_DATA = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TB_TEMP = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBPT = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBIN_SCALE = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBIN_ALGO = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBIN_DEFA = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBIN_BNDS = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBIN_NORM = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBIN_CACH = Multiline-String\n\n\n\n\n\nmapdl_snippets_strings.TBIN_EXTR = Multiline-String\n\n"},{"objectID":"Home","href":"index.html#pymaterials-manager","title":"PyMaterials Manager","text":"PyMaterials Manager\n\n      \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPyMaterials Manager is a Python package for unifying material management across the Ansys portfolio.\n\nPyMaterials Manager is currently a proof of concept, expect things to break.\nIt currently provides the following features:\n\nIt defines a Material Object that can have different material models\n\nThe supported material models can be read from a running PyMAPDL instance\n\nThe supported material models can written to a running PyMAPDL / pyFluent instance\n\nSome supported material models can be read from a MatML XML file\n\nSome supported material models can be written to a MatML XML file\n\nThe following material models are supported:\n\npyMAPDL\n\nSimple constant material properties\n\nPiecewise linear material properties\n\nPolynomial material properties\n\nAnisotropic Elasticity\n\npyFluent\n\nSimple constant material properties\n\nIdeal Gas properties"},{"objectID":"Home","href":"index.html#installation","title":"PyMaterials Manager > Installation","text":"Installation\n\nInstall the ansys-materials-manager package with this code:\n\nAlternatively, clone and install this package with this code:"},{"objectID":"Home","href":"index.html#testing","title":"PyMaterials Manager > Testing","text":"Testing\n\nThis project takes advantage of tox. This tool is used to automate common\ndevelopment tasks (similar to Makefile), but it is oriented towards Python\ndevelopment."},{"objectID":"Home","href":"index.html#use-tox","title":"PyMaterials Manager > Use tox","text":"Use tox\n\ntox uses environments, which are similar to Makefile rules, to make it highly\ncustomizable. In fact, this tool creates its own virtual environment so that anything\nbeing tested is isolated from the project to guarantee the project’s integrity.\n\nDescriptions follow of some of the most widely used environments:\n\ntox -e style: Checks the code style of your project.\n\ntox -e py: Runs your test suite.\n\ntox -e doc: Builds the documentation of your project."},{"objectID":"Home","href":"index.html#perform-raw-testing","title":"PyMaterials Manager > Perform raw testing","text":"Perform raw testing\n\nIf required, you can call style commands (such as black, isort,\nand flake8) or unit testing commands (such as pytest) from the command\nline. However, calling these commands does not guarantee that your project\nis being tested in an isolated environment, which is the reason why tools\nlike tox exist."},{"objectID":"Home","href":"index.html#use-pre-commit","title":"PyMaterials Manager > Use pre-commit","text":"Use pre-commit\n\nThe style checks take advantage of pre-commit. Developers are not forced but\nencouraged to install this tool by running this command:\n\nEvery time you stage some changes and try to commit them,\npre-commit only allows them to be committed if all defined hooks succeed."},{"objectID":"Home","href":"index.html#documentation-and-issues","title":"PyMaterials Manager > Documentation and issues","text":"Documentation and issues\n\nFor comprehensive information on PyMaterials Manager, see the latest release documentation.\nOn the PyMaterials Manager Issues page, you can create issues to submit questions,\nreport bugs, and request new features. This is the best place to post questions and code."},{"objectID":"Home","href":"index.html#distribution","title":"PyMaterials Manager > Distribution","text":"Distribution\n\nIf you want to create either source or wheel files, start by installing poetry and then\nexecuting the build module. To install poetry you should use the pipx installation\nmethod in the poetry documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/index.html#the-mapdl-package","title":"The mapdl package","text":"The mapdl package\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/index.html#summary","title":"The mapdl package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nmapdl_reader\n\nProvides the mapdl_reader module.\n\nmapdl_snippets_strings\n\n\n\nmapdl_writer\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/MaterialManager.html#materialmanager","title":"MaterialManager","text":"MaterialManager\n\n\n\nclass ansys.materials.manager.material_manager.MaterialManager(client: Any | None = None)\n\nManage material creation, assignment, and other management tasks.\n\nThis class is the main entry point for the Pythonic material management interface."},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/MaterialManager.html#overview","title":"MaterialManager > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nadd_material\n\nAdd a material into the library.\n\nextend_material\n\nExtend the models defined within a specific material.\n\ndelete_material\n\nDelete a material from the library.\n\nread_from_matml\n\nRead materials from a MatML file and add them to the library.\n\nwrite_to_matml\n\nWrite the materials in the library to a MatML file.\n\nget_material\n\nReturn a material from the library.\n\nwrite_material\n\nWrite material to the pyansys session.\n\nread_from_client_session\n\nRead material from the pyansys client session.\n\nProperties\n\n\n\n\n\nmaterials\n\nThe material models.\n\nclient\n\nThe provided client."},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/MaterialManager.html#import-detail","title":"MaterialManager > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/MaterialManager.html#property-detail","title":"MaterialManager > Property detail","text":"Property detail\n\n\n\nproperty MaterialManager.materials: dict[str, ansys.materials.manager._models.material.Material]\n\nThe material models.\n\n\n\nproperty MaterialManager.client: Any\n\nThe provided client."},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/MaterialManager.html#method-detail","title":"MaterialManager > Method detail","text":"Method detail\n\n\n\nMaterialManager.add_material(material: ansys.materials.manager._models.material.Material) -> None\n\nAdd a material into the library.\n\n\n\nMaterialManager.extend_material(material_name: str, material_models: list[ansys.materials.manager._models._common.material_model.MaterialModel]) -> None\n\nExtend the models defined within a specific material.\n\n\n\nMaterialManager.delete_material(material_name: str)\n\nDelete a material from the library.\n\n\n\nMaterialManager.read_from_matml(path: str | pathlib.Path) -> None\n\nRead materials from a MatML file and add them to the library.\n\n\n\nMaterialManager.write_to_matml(path: str | pathlib.Path) -> None\n\nWrite the materials in the library to a MatML file.\n\n\n\nMaterialManager.get_material(material_name) -> ansys.materials.manager._models.material.Material | None\n\nReturn a material from the library.\n\n\n\nMaterialManager.write_material(material_name: str, material_id: int | None = None) -> None\n\nWrite material to the pyansys session.\n\n\n\nMaterialManager.read_from_client_session() -> None\n\nRead material from the pyansys client session."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/MatmlWriter.html#matmlwriter","title":"MatmlWriter","text":"MatmlWriter\n\n\n\nclass ansys.materials.manager.util.matml.matml_from_material.MatmlWriter(materials: Sequence[ansys.materials.manager._models.material.Material])\n\nExports a list of MAPDL materials to an engineering data XML file.\n\nExamples\n\n> writer = MatmlWriter(materials)\n> writer.export(‘engineering_data.xml’)"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/MatmlWriter.html#overview","title":"MatmlWriter > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nwrite\n\nWrite a MatML (engineering data XML format) representation of materials to buffer.\n\nexport\n\nWrite a MatML (engineering data XML format) representation of materials to file."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/MatmlWriter.html#import-detail","title":"MatmlWriter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/MatmlWriter.html#method-detail","title":"MatmlWriter > Method detail","text":"Method detail\n\n\n\nMatmlWriter.write(buffer: BinaryIO, indent: bool | None = False, xml_declaration: bool | None = False) -> None\n\nWrite a MatML (engineering data XML format) representation of materials to buffer.\n\nParameters\n\nbuffer:\n\nBuffer to write to.\n\nindent\n\nOptional[bool]\n\nWhether to add an indent to format the XML output.\nDefaults to false.\n\nxml_declaration: Optional[bool]\n\nWhether to add the XML declaration to the output.\n\n\n\nMatmlWriter.export(path: _PATH_TYPE, indent: bool | None = False, xml_declaration: bool | None = False) -> None\n\nWrite a MatML (engineering data XML format) representation of materials to file.\n\nParameters\n\npath:\n\nFile path.\n\nindent\n\nOptional[bool]\n\nWhether to add an indent to format the XML output.\nDefaults to false.\n\nxml_declaration: Optional[bool]\n\nWhether to add the XML declaration to the output."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/index.html#the-matml_from_materialpy-module","title":"The matml_from_material.py module","text":"The matml_from_material.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/index.html#summary","title":"The matml_from_material.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMatmlWriter\n\nExports a list of MAPDL materials to an engineering data XML file.\n\nConstants\n\n\n\n\n\nROOT_ELEMENT\n\n\n\nVERSION\n\n\n\nVERSION_DATE\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/index.html#description","title":"The matml_from_material.py module > Description","text":"Description\n\nProvides the MatmlWriter class."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_from_material/index.html#module-detail","title":"The matml_from_material.py module > Module detail","text":"Module detail\n\n\n\nmatml_from_material.ROOT_ELEMENT = 'EngineeringData'\n\n\n\n\n\nmatml_from_material.VERSION = '18.0.0.60'\n\n\n\n\n\nmatml_from_material.VERSION_DATE = '29.08.2016 15:02:00'\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/index.html#the-util-package","title":"The util package","text":"The util package\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/index.html#summary","title":"The util package > Summary","text":"Summary\n\nSubpackages\n\n\n\n\n\nmapdl\n\n\n\nmatml\n\n\n\nSubmodules\n\n\n\n\n\ncommon\n\nProvides the common module.\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/PropertySet.html#propertyset","title":"PropertySet","text":"PropertySet\n\n\n\nclass ansys.materials.manager.util.matml.matml_parser.PropertySet\n\nDefine a PropertySet which contains one or several parameters."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/PropertySet.html#overview","title":"PropertySet > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nname\n\n\n\nparameters\n\n\n\nqualifiers\n\n\n\nunit\n\n\n\nunit_name\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/PropertySet.html#import-detail","title":"PropertySet > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/PropertySet.html#attribute-detail","title":"PropertySet > Attribute detail","text":"Attribute detail\n\n\n\nPropertySet.name: str\n\n\n\n\n\nPropertySet.parameters: Dict\n\n\n\n\n\nPropertySet.qualifiers: Dict\n\n\n\n\n\nPropertySet.unit: str\n\n\n\n\n\nPropertySet.unit_name: str\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_writer/index.html#the-mapdl_writerpy-module","title":"The mapdl_writer.py module","text":"The mapdl_writer.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_writer/index.html#summary","title":"The mapdl_writer.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nwrite_constant_property\n\nWrite constant property.\n\nwrite_constant_properties\n\nWrite constant properties.\n\nwrite_interpolation_options\n\nWrite interpolation options.\n\nwrite_temperature_table_values\n\nWrite temperature table.\n\nwrite_table_dep_values\n\nWrite table of dependent values.\n\nwrite_table_values\n\nWrite table variables.\n\nwrite_table_value_per_temperature\n\nWrite table values per temperature.\n\nwrite_tb_points_for_temperature\n\nWrite points table.\n\nwrite_temperature_reference_value\n\nWrite reference temperature."},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_writer/index.html#module-detail","title":"The mapdl_writer.py module > Module detail","text":"Module detail\n\n\n\nmapdl_writer.write_constant_property(label: str, property: float | int | list[float | int] | numpy.ndarray, material_id, c1: float | None = None, c2: float | None = None, c3: float | None = None, c4: float | None = None, unit: str = '')\n\nWrite constant property.\n\nExample:\nMP,EX,1,1000000,    ! Pa\n\n\n\nmapdl_writer.write_constant_properties(labels: list[str], properties: list[list[float]], property_units: list[str], material_id, c1: float | None = None, c2: float | None = None, c3: float | None = None, c4: float | None = None)\n\nWrite constant properties.\n\nExample:\nMP,EX,1,1000000,    ! Pa\nMP,NUXY,1,0.3,\n\n\n\nmapdl_writer.write_interpolation_options(interpolation_options: ansys.materials.manager._models._common.InterpolationOptions, independent_parameters: list[ansys.materials.manager._models._common.IndependentParameter]) -> str\n\nWrite interpolation options.\n\nExample:\nTBIN,ALGO,ALMUL\nTBIN,NORM,,ON\nTBIN,EXTR,,BBOX\nTBIN,DEFA,Orientation Tensor A11,0\nTBIN,BNDS,Orientation Tensor A11,0,1\nTBIN,DEFA,Orientation Tensor A22,0\nTBIN,BNDS,Orientation Tensor A22,0,1\n\n\n\nmapdl_writer.write_temperature_table_values(labels: list[str], dependent_parameters: list[list[float]], dependent_parameters_unit: list[str], material_id: int, temperature_parameter: ansys.materials.manager._models._common.IndependentParameter) -> str\n\nWrite temperature table.\n\nExample:\nMPTEMP,1,12.0,21.0,,,,\nMPDATA,EX,3,1,2000000,1000000,,,, ! Pa\nMPTEMP,1,12.0,21.0,,,,\nMPDATA,PRXY,3,1,0.35,0.3,,,, !\n\n\n\nmapdl_writer.write_table_dep_values(material_id: str, label: str, dependent_values: list[float], tb_opt: str = '') -> str\n\nWrite table of dependent values.\n\nExample:\nTB,ELASTIC,1,,,AELS\nTBDATA,1,100000000,1000000,2000000,3000000,4000000,5000000\nTBDATA,7,150000000,6000000,7000000,8000000,9000000,200000000\nTBDATA,13,10000000,11000000,12000000,50000000,13000000,14000000\nTBDATA,19,60000000,15000000,70000000\n\n\n\nmapdl_writer.write_table_values(label: str, dependent_parameters: list[list[float]], material_id: int, independent_parameters: list[ansys.materials.manager._models._common.IndependentParameter], tb_opt: str | None = None) -> tuple[str, str]\n\nWrite table variables.\n\nExample:\nOrientation Tensor A11 = ‘UF01’ ! Orientation Tensor A11\nOrientation Tensor A22 = ‘UF02’ ! Orientation Tensor A22\nTemperature = ‘TEMP’ ! Temperature\nTB,ELASTIC,1,,,OELM\nTBFIELD,Orientation Tensor A11,0 ! Orientation Tensor A11\nTBFIELD,Orientation Tensor A22,0 ! Orientation Tensor A22\nTBFIELD,TEMP,50 ! Temperature\nTBDATA,1,10,10,10,4.54,4.54,4.54\nTBDATA,7,0.1,0.1,0.1\nTBFIELD,Orientation Tensor A11,0 ! Orientation Tensor A11\nTBFIELD,Orientation Tensor A22,0 ! Orientation Tensor A22\nTBFIELD,TEMP,100 ! Temperature\nTBDATA,1,10,10,10,4.54,4.54,4.54\nTBDATA,7,0.1,0.1,0.1\n\n\n\nmapdl_writer.write_table_value_per_temperature(label: str, material_id: int, dependent_parameters: list[list[float]], temperature_parameter: ansys.materials.manager._models._common.IndependentParameter, tb_opt: str = '') -> str\n\nWrite table values per temperature.\n\nExample:\nTemperature = ‘TEMP’ ! Temperature\nTB,HILL,2,,,\nTBTEMP,34\nTBDATA,1,1.2,0.8,0.5,0.12,0.23,0.23\nTBTEMP,78\nTBDATA,1,1.2,0.8,0.5,0.12,0.23,0.23\n\n\n\nmapdl_writer.write_tb_points_for_temperature(label: str, table_parameters: list[list[float]], material_id: int, temperature_parameter: list[float], tb_opt: str) -> tuple[str, str]\n\nWrite points table.\n\nExample:\nTB,PLASTIC,2,,MISO\nTBFIELD,TEMP,22, !\nTBPT,,0.0,16704754.8966912\nTBPT,,0.000189791542302976,21518003.4164155\nTBPT,,0.000379583084605952,25601270.737195\nTBPT,,0.000569374626908928,29108916.0548528\n\n\n\nmapdl_writer.write_temperature_reference_value(material_id: int, temperature: float) -> str\n\nWrite reference temperature.\n\nExample:\nMP,REFT,1,21,"},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/index.html#the-material_managerpy-module","title":"The material_manager.py module","text":"The material_manager.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/index.html#summary","title":"The material_manager.py module > Summary","text":"Summary\n\nClasses\n\n\n\n\n\nMaterialManager\n\nManage material creation, assignment, and other management tasks.\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/material_manager/index.html#description","title":"The material_manager.py module > Description","text":"Description\n\nProvides the MaterialManager class."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/index.html#the-matml-package","title":"The matml package","text":"The matml package\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/index.html#summary","title":"The matml package > Summary","text":"Summary\n\nSubmodules\n\n\n\n\n\nmatml_from_material\n\nProvides the MatmlWriter class.\n\nmatml_parser\n\nProvides the matml_parser module.\n\nmatml_to_material\n\nProvides a function to convert MatML entries into Material objects.\n\nutils\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/MatmlReader.html#matmlreader","title":"MatmlReader","text":"MatmlReader\n\n\n\nclass ansys.materials.manager.util.matml.matml_parser.MatmlReader(file_path: _PATH_TYPE)\n\nParse a MatML (engineering data xml) file.\n\nFills a nested dict with all the materials and their properties.\nThe key of the first layer are the material names.\nThe conversion into a specific format/object representation is implemented separately.\n\nThe data can be accessed via matml_reader.materials"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/MatmlReader.html#overview","title":"MatmlReader > Overview","text":"Overview\n\nMethods\n\n\n\n\n\nparse_matml\n\nRead MATML (engineering data XML) file.\n\nget_material\n\nReturn a certain material.\n\nProperties\n\n\n\n\n\nmaterials\n\nReturn the parsed material data from the MatML file.\n\ntransfer_ids\n\nReturn the parsed Workbench Transfer IDs from the MatML file.\n\nmatml_file_path\n\nReturn the path to the target MatML file.\n\nStatic methods\n\n\n\n\n\nparse_from_file\n\nRead MatML (engineering data XML) data from a file.\n\nparse_text\n\nRead MatML (engineering data XML) data from a string."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/MatmlReader.html#import-detail","title":"MatmlReader > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/MatmlReader.html#property-detail","title":"MatmlReader > Property detail","text":"Property detail\n\n\n\nproperty MatmlReader.materials: Dict | None\n\nReturn the parsed material data from the MatML file.\n\nProperty will be None unless the parser has successfully parsed a MatML file.\n\nReturns\n\nDict: Material data from the MatML file\n\n\n\nDeprecated since version 0.2.3: materials will be removed in version 0.3.0, instead use the static methods\nparse_from_file and parse_from_text to parse the MatML file and\nobtain the parsed material dictionary.\n\n\n\nproperty MatmlReader.transfer_ids: Dict[str, str] | None\n\nReturn the parsed Workbench Transfer IDs from the MatML file.\n\nProperty will be None unless the parser has successfully parsed a MatML file.\n\nReturns\n\nDict: Workbench transfer IDs from the MatML file\n\n\n\nDeprecated since version 0.2.3: transfer_ids will be removed in version 0.3.0, instead use the static methods\nparse_from_file and parse_from_text to parse the MatML file and\nobtain the Workbench transfer IDs.\n\n\n\nproperty MatmlReader.matml_file_path: str\n\nReturn the path to the target MatML file.\n\nDeprecated since version 0.2.3: matml_file_path will be removed in version 0.3.0, instead use the static methods\nparse_from_file and parse_from_text to parse the MatML file and\nobtain the parsed material dictionary and the Workbench transfer IDs."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/MatmlReader.html#method-detail","title":"MatmlReader > Method detail","text":"Method detail\n\n\n\nstatic MatmlReader.parse_from_file(file_path: _PATH_TYPE) -> Dict[str, str | Dict]\n\nRead MatML (engineering data XML) data from a file.\n\nReturns the material information and the workbench transfer identities (if present).\n\nParameters\n\nfile_path: Union[str, Path]\n\nPath to MatML file on disk\n\nReturns\n\nDict[python:str, Union[python:str, Dict]]\n\n\n\n\n\nstatic MatmlReader.parse_text(matml_content: str) -> Dict[str, str | Dict]\n\nRead MatML (engineering data XML) data from a string.\n\nReturns the material information and the workbench transfer identities (if present).\n\nParameters\n\nmatml_content: str\n\nMatML content in text form\n\nReturns\n\nDict[python:str, Union[python:str, Dict]]\n\n\n\n\n\nMatmlReader.parse_matml() -> int\n\nRead MATML (engineering data XML) file.\n\nOutput can be consumed via matml_reader.materials or\nmatml_reader.get_material(name).\n\nReturns\n\nint: Number of imported materials.\n\n\n\nDeprecated since version 0.2.3: parse_matml will be removed in version 0.3.0, it is replaced by\nparse_from_file and parse_from_text.\n\n\n\nMatmlReader.get_material(name: str) -> Dict\n\nReturn a certain material.\n\nDeprecated since version 0.2.3: get_material will be removed in version 0.3.0, instead use the static methods\nparse_from_file and parse_from_text to parse the MatML file and\nobtain the parsed material dictionary and the Workbench transfer ID."},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_reader/index.html#the-mapdl_readerpy-module","title":"The mapdl_reader.py module","text":"The mapdl_reader.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_reader/index.html#summary","title":"The mapdl_reader.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nread_mapdl\n\nRead materials from a provided MAPDL session.\n\nConstants\n\n\n\n\n\nMODEL_REGISTRY\n\n\n\nMP_MATERIAL_MODELS\n\n\n\nTB_MATERIAL_MODELS\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_reader/index.html#description","title":"The mapdl_reader.py module > Description","text":"Description\n\nProvides the mapdl_reader module."},{"objectID":"Home","href":"api/ansys/materials/manager/util/mapdl/mapdl_reader/index.html#module-detail","title":"The mapdl_reader.py module > Module detail","text":"Module detail\n\n\n\nmapdl_reader.read_mapdl(mapdl: ansys.materials.manager._models._common._MapdlCore) -> dict[str, ansys.materials.manager._models.material.Material]\n\nRead materials from a provided MAPDL session.\n\nReturns them indexed by the material ID.\n\nParameters\n\nmapdl\n\n_MapdlCore\n\nActive pyMAPDL session.\n\nReturns\n\npython:dict[python:str, Material]\n\nMaterials currently active in the MAPDL session, indexed by their material ID.\n\n\n\nmapdl_reader.MODEL_REGISTRY\n\n\n\n\n\nmapdl_reader.MP_MATERIAL_MODELS\n\n\n\n\n\nmapdl_reader.TB_MATERIAL_MODELS\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/index.html#the-ansysmaterialsmanager-library","title":"The ansys.materials.manager library","text":"The ansys.materials.manager library\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/index.html#summary","title":"The ansys.materials.manager library > Summary","text":"Summary\n\nSubpackages\n\n\n\n\n\nutil\n\n\n\nSubmodules\n\n\n\n\n\nmaterial_manager\n\nProvides the MaterialManager class.\n\nAttributes\n\n\n\n\n\n__version__\n\n\n\n\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/index.html#description","title":"The ansys.materials.manager library > Description","text":"Description\n\nProvides a helper to manage materials in the Ansys ecosystem."},{"objectID":"Home","href":"api/ansys/materials/manager/index.html#module-detail","title":"The ansys.materials.manager library > Module detail","text":"Module detail\n\n\n\nmanager.__version__\n\n"},{"objectID":"Home","href":"api/index.html#api-reference","title":"API reference","text":"API reference\n\nThis section describes ansys-materials-manager endpoints, their capabilities, and how\nto interact with them programmatically.\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/utils/index.html#the-utilspy-module","title":"The utils.py module","text":"The utils.py module\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/utils/index.html#summary","title":"The utils.py module > Summary","text":"Summary\n\nFunctions\n\n\n\n\n\nparse_unit_string\n\nParse a unit string into a list of tuples.\n\nxml_to_unit\n\nConvert XML element to a unit string.\n\nunit_to_xml\n\nConvert a unit string to an XML element.\n\nparse_property_set_name\n\nRemove spaces, dashes and backslashes from the property set name.\n\nget_data_and_unit\n\nGet data and unit from parameter.\n\ncreate_xml_string_value\n\nExtract the value for the xml.\n\nconvert_to_float_string\n\nConvert a float to string or keep it as it is otherwise."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/utils/index.html#module-detail","title":"The utils.py module > Module detail","text":"Module detail\n\n\n\nutils.parse_unit_string(unit_str: str) -> list[tuple[str, int]]\n\nParse a unit string into a list of tuples.\n\n\n\nutils.xml_to_unit(param: xml.etree.ElementTree.Element) -> tuple[str, dict[str, str]]\n\nConvert XML element to a unit string.\n\nParameters\n\nparam\n\nET.Element\n\nThe XML element containing the unit information.\n\nReturns\n\npython:tuple[python:str, python:dict[python:str, python:str]]\n\nA tuple containing the unit ID and a dictionary with unit details.\n\n\n\nutils.unit_to_xml(unit: str) -> xml.etree.ElementTree.Element\n\nConvert a unit string to an XML element.\n\nParameters\n\nunit\n\npython:str\n\nThe unit string to convert, e.g., “kg*m-3” or “Pa”.\n\nReturns\n\nET.Element\n\nAn XML element representing the units.\n\n\n\nutils.parse_property_set_name(property_set_name)\n\nRemove spaces, dashes and backslashes from the property set name.\n\nParameters\n\nproperty_set_name\n\npython:str\n\nProperty set name.\n\nReturns\n\npython:str\n\nthe material model class name.\n\n\n\nutils.get_data_and_unit(param: Dict) -> tuple[list[float | int], str]\n\nGet data and unit from parameter.\n\nParameters\n\nparam\n\nDict\n\nParameter to parse.\n\nReturns\n\npython:tuple[python:list[python:float | python:int], python:str]\n\nData and units.\n\n\n\nutils.create_xml_string_value(values: float | int | list[float | int]) -> str\n\nExtract the value for the xml.\n\nParameters\n\nvalues\n\npython:float | python:int | python:list[python:float | python:int]\n\nValue to be parsed.\n\nReturns\n\npython:str\n\nParsed value to add to xml data.\n\n\n\nutils.convert_to_float_string(value: float | str) -> str\n\nConvert a float to string or keep it as it is otherwise.\n\nParameters\n\nvalue\n\npython:float | python:str\n\nValue to be parsed.\n\nReturns\n\npython:str\n\nParsed value."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/Parameter.html#parameter","title":"Parameter","text":"Parameter\n\n\n\nclass ansys.materials.manager.util.matml.matml_parser.Parameter\n\nDefine a parameter such as density or Young’s Modulus."},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/Parameter.html#overview","title":"Parameter > Overview","text":"Overview\n\nAttributes\n\n\n\n\n\nname\n\n\n\ndata\n\n\n\nqualifiers\n\n\n\nunit\n\n\n\nunit_name\n\n"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/Parameter.html#import-detail","title":"Parameter > Import detail","text":"Import detail"},{"objectID":"Home","href":"api/ansys/materials/manager/util/matml/matml_parser/Parameter.html#attribute-detail","title":"Parameter > Attribute detail","text":"Attribute detail\n\n\n\nParameter.name: str\n\n\n\n\n\nParameter.data: Any\n\n\n\n\n\nParameter.qualifiers: Dict\n\n\n\n\n\nParameter.unit: str\n\n\n\n\n\nParameter.unit_name: str\n\n"}]